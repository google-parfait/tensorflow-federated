syntax = "proto3";

package tensorflow_federated.aggregation;

import "tensorflow_federated/cc/core/impl/aggregation/core/tensor.proto";

// Internal state representation of an AggVectorAggregator.
message AggVectorAggregatorState {
  uint64 num_inputs = 1;
  bytes vector_data = 2;
}

// Internal state representation of a FederatedMeanAggregator.
message FederatedMeanAggregatorState {
  uint64 num_inputs = 1;
  bytes weights_sum = 2;
  bytes weighted_values_sum = 3;
}

// Internal state representation of a OneDimGroupingAggregator.
message OneDimGroupingAggregatorState {
  uint64 num_inputs = 1;
  bytes vector_data = 2;
}

// Internal state representation of a GroupByAggregator.
message GroupByAggregatorState {
  uint64 num_inputs = 1;
  // TODO: b/335276781 - Consider storing key combiner state more efficiently
  // such that string keys that appear in multiple combinations are only stored
  // once.
  repeated TensorProto keys = 2;
  repeated OneDimGroupingAggregatorState nested_aggregators = 3;
  // The number of contributors to each combination of keys. It should be of the
  // same length as each of the tensors in keys.
  repeated uint64 counter_of_contributors = 4;
}

// Internal state representation of a DPQuantileAggregator.
message DPQuantileAggregatorState {
  uint64 num_inputs = 1;
  uint64 reservoir_sampling_count = 2;
  bytes buffer = 3;
}

message DPTensorAggregatorBundleState {
  uint64 num_inputs = 1;
  repeated bytes nested_serialized_states = 2;
}
