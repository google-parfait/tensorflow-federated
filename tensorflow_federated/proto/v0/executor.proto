syntax = "proto3";

package tensorflow_federated.v0;

import "google/protobuf/any.proto";
import "tensorflow_federated/proto/v0/computation.proto";

// A service interface to be implemented by executors.
service Executor {
  // Creates a value in the executor and returns a reference to it that can be
  // supplied as an argument to other methods.
  rpc CreateValue(CreateValueRequest) returns (CreateValueResponse) {}

  // Creates a call in the executor and returns a reference to the result.
  rpc CreateCall(CreateCallRequest) returns (CreateCallResponse) {}

  // Creates a tuple of values in the executor and returns a reference to it.
  rpc CreateTuple(CreateTupleRequest) returns (CreateTupleResponse) {}

  // Creates a selection from an executor value and returns a reference to it.
  rpc CreateSelection(CreateSelectionRequest)
      returns (CreateSelectionResponse) {}

  // Causes a value in the executor to get computed, and sends back the result.
  // WARNING: Unlike all other methods in this API, this may be a long-running
  // call (it will block until the value becomes available).
  rpc Compute(ComputeRequest) returns (ComputeResponse) {}

  // TODO(b/134543154): Given that there is no support for asynchronous server
  // processing in Python gRPC, long-running calls may be a problem. Revisit
  // this and look for alternatives.

  // Causes one or more values in the executor to get disposed of (no longer
  // available for future calls).
  rpc Dispose(DisposeRequest) returns (DisposeResponse) {}
}

message CreateValueRequest {
  Value value = 1;
}

message CreateValueResponse {
  ValueRef value_ref = 1;
}

message CreateCallRequest {
  // A reference to the function to be called (which must be obtained from a
  // prior call to `CreateValue()`).
  ValueRef function_ref = 1;

  // An optional argument, only for functions that declare an argument.
  ValueRef argument_ref = 2;
}

message CreateCallResponse {
  ValueRef value_ref = 1;
}

message CreateTupleRequest {
  repeated Element element = 1;
  message Element {
    string name = 1;
    ValueRef value_ref = 2;
  }
}

message CreateTupleResponse {
  ValueRef value_ref = 1;
}

message CreateSelectionRequest {
  ValueRef source_ref = 1;

  oneof selection {
    string name = 2;
    int32 index = 3;
  }
}

message CreateSelectionResponse {
  ValueRef value_ref = 1;
}

message ComputeRequest {
  ValueRef value_ref = 1;
}

message ComputeResponse {
  Value value = 1;
}

message DisposeRequest {
  repeated ValueRef value_ref = 1;
}

message DisposeResponse {}

// A representation of a value that's to be embedded in the executor, or that
// is being returned as a result of a computation.
message Value {
  oneof value {
    // A serialized tensor content as an instance of `tensorflow.TensorProto`,
    // as defined in `tensorflow/core/framework/tensor.proto`.
    google.protobuf.Any tensor = 1;

    // TODO(b/134543154): To be populated with the variants of what we might
    // want to hand over the network (tensor protos, computations, nested
    // structures of those, etc.).
  }
}

// A reference to a value embedded in the executor, guaranteed to be unique
// at a minimum among all the values that have been embedded in this executor
// instance (but not guaranteed to be unique globally across the network),
// across the agreed-upon lifetime of the service (at the very least, reboots
// of the backend instance while the client is running should not result in
// name clashes). In the context of a simulation, the service lifetime should
// at minimum span the lifetime of the entire simulation.
message ValueRef {
  // The identifier should consist of printable ASCII characters for the sake
  // of debuggability, ideally alphanumeric. The format of the identifier may
  // depend on the type of the executor.
  string id = 1;
}
