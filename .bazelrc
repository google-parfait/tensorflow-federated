# TensorFlow Federated Bazel configuration.
#
# See https://docs.bazel.build/versions/master/user-manual.html#config for
# details on the various configuration options.

# Enable verbose failures for testing only.
build --verbose_failures

# Enable logging rc options.
common --announce_rc

# Enable platform-specific configs from bazelrc files.
common --enable_platform_specific_config

# Enable logging error output.
test --test_output=errors
test --test_summary=detailed

# Execute commands as local subprocesses
build --spawn_strategy=local

# Enable build optimizations.
build --compilation_mode=opt

# Enable fast C++ protocol buffers, 10x speedup over pure Python.
build --define=use_fast_cpp_protos=true

# Processor native optimizations (depends on build host capabilities).
build --copt=-march=native
build --host_copt=-march=native
# Only use level three optimizations for target, not necessarily for host
# since host artifacts don't need to be fast.
build --copt=-O3

# C++ compiler options.
build --cxxopt=-std=c++17
build --host_cxxopt=-std=c++17

# gRPC on MacOS requires this define, see
# https://github.com/bazelbuild/bazel/issues/4341#issuecomment-572050759 for
# more information.
build:macos --copt=-DGRPC_BAZEL_BUILD

#
# Remote execution capabilities.
#

# Enable authentication.
build:remote --google_default_credentials=true

# Enable remote cache.
build:remote --remote_cache=grpcs://remotebuildexecution.googleapis.com

# Project configuration.
build:remote --remote_instance_name=projects/tensorflow-federated/instances/default_instance
build:remote --project_id=tensorflow-federated

#
# Required to build Tensorflow.
#

# Enable remote execution capabilities.
common --experimental_repo_remote_exec
