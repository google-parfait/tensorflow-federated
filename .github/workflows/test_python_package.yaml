# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Test Python Package

on: [push, workflow_dispatch]  # yamllint disable-line rule:truthy

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  test-python-package-job:
    name: Test Python Package
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      id: auth
      uses: google-github-actions/auth@v2.1.3
      with:
        credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}
        create_credentials_file: true

    - name: Set up bazel repository cache
      uses: actions/cache@v4
      with:
        path: "~/.cache/bazel"
        key: ${{ runner.os }}-bazel-${{ hashFiles('.bazelversion', '.bazelrc', 'WORKSPACE') }}
        restore-keys: ${{ runner.os }}-bazel-

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        cache: "pip"

    - name: Install Python dependencies
      run: |
        pip install --upgrade numpy~=1.25
        pip freeze

    - name: Build Python package
      run: |
        bazelisk run //tensorflow_federated/tools/python_package:build_python_package_v2 \
            --build_tag_filters="-nokokoro,-nopresubmit,-requires-gpu-nvidia" \
            --google_credentials="${{ steps.auth.outputs.credentials_file_path }}" \
            --remote_cache="https://storage.googleapis.com/tensorflow-federated-bazel-cache/${{ github.job }}" \
            -- \
            --output_dir="~/dist"

    - name: Test Python package
      run: |
        pip freeze | xargs pip uninstall --yes
        echo '---'
        pip freeze
        echo '---'

        ls -la "bazel-out"

        package="$(ls "dist/"*".whl" | head -n1)"
        pip install --upgrade "${package}"
        pip freeze

    # python -c "import tensorflow_federated as tff; print(tff.federated_computation(lambda: 'Hello World')())"
    # python -c "import tensorflow_federated as tff; print(tff.__version__)"

    # - name: Analyze bazel
    #   run: bazelisk analyze-profile "$(bazel info output_base)/command.profile.gz"
